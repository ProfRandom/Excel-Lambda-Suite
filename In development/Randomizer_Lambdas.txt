RANDDIGITS = LAMBDA([len],
    LET(
        len, IF(ISOMITTED(len), 5, len),
        min, IF(len = 1, 0, 10 ^ (len - 1)),
        max, IF(len = 1, 9, 10 ^ len) - 1,
        RANDBETWEEN(min, max)
    )
);

RANDID = LAMBDA([len],
    LET(
        len, IF(OR(ISOMITTED(len), len = 0), 5, len),
        small, SEQUENCE(26, , 97, 1),
        large, SEQUENCE(26, , 65, 1),
        numbers, SEQUENCE(10, , 48, 1),
        extras, {126; 33; 64; 35; 36; 37; 94; 38; 42; 40; 41; 95; 45; 43; 61; 123; 91; 125; 93; 124; 92; 58; 59; 60; 44; 62; 46; 63},
        all_list, VSTACK(small, large, numbers, extras),
        rand_list, INDEX(all_list, RANDARRAY(len, , 1, COUNT(all_list), TRUE)),
        output, CONCAT(BYROW(rand_list, LAMBDA(q, CHAR(q)))),
        output
    )
);

D_N_D = LAMBDA([dice], [kind],
    LET(
        dice, IF(ISOMITTED(dice), 3, dice),
        kind, IF(ISOMITTED(kind), 6, kind),
        nums, MAKEARRAY(1, dice, LAMBDA(r, c, RANDBETWEEN(1, kind))),
        nums
    )
);

DND = LAMBDA([dice], [kind],
    LET(
        dice, IF(ISOMITTED(dice), 3, dice),
        kind, IF(ISOMITTED(kind), 6, kind),
        nums, MAKEARRAY(1, dice, LAMBDA(r, c, RANDBETWEEN(1, kind))),
        SUM(nums)
    )
);

/* RANDUNIQUE

Generates a list of random numbers without repeats
*/

RANDUNIQUE = LAMBDA([len], [start], [step],
    LET(
        len, IF(ISOMITTED(len), 5, len),
        start, IF(ISOMITTED(start), 1, start),
        step, IF(ISOMITTED(step), 1, step),
        output, SORTBY(SEQUENCE(len, , start, step), RANDARRAY(len)),
        output
    )
);

YAHTZEE = LAMBDA([null],

LET(
    array, MAKEARRAY(1, 5, LAMBDA(r, c, RANDBETWEEN(1, 6))),
    TEXTJOIN("-", , array)
    )
);


/* RANDSTRING

generates a random alphabetic string of specified length
*/

RANDSTRING = LAMBDA([len], [mode],
    LET(
        mode, IF(OR(ISOMITTED(mode), mode > 2), 0, mode),
        len, IF(OR(ISOMITTED(len), len = 0), 5, len),
        small, SEQUENCE(26, , 97, 1),
        large, SEQUENCE(26, , 65, 1),
        all_list, VSTACK(small, large),
        rand_list, SWITCH(
            mode,
            0, INDEX(all_list, RANDARRAY(len, , 1, COUNT(all_list), TRUE)),
            1, INDEX(small, RANDARRAY(len, , 1, COUNT(small), TRUE)),
            2, INDEX(large, RANDARRAY(len, , 1, COUNT(large), TRUE))
        ),
        output, CONCAT(BYROW(rand_list, LAMBDA(q, CHAR(q)))),
        output
    )
);