PPSC_GETLAST = LAMBDA(in,
    LET(
        input, TOCOL(in, 3),
        whole_name, IF(ISNUMBER(SEARCH("(", input)), TEXTBEFORE(input, "("), "TBA"),
        last_name, TEXTAFTER(whole_name, " ", -2, , , "TBA"),
        TRIM(last_name)
    )
);

PPSC_NAMEONLY = LAMBDA(array,

LET(
    name, TRIM(TEXTBEFORE(array, "(", , , , array)),
    TOCOL(name, 3)
    )
);

PPSC_SPLITNAME = LAMBDA(array,

LET(
    name, TRIM(TEXTBEFORE(array, "(", , , , array)),
    TEXTSPLIT(name, " ")
    )
);

SPLITNAME = LAMBDA(input,
    LET(
        Last, TEXTBEFORE(input, ", "),
        Remainder, TEXTAFTER(input, ", "),
        HasMiddle, ISNUMBER(SEARCH(" ", Remainder)),
        First, IF(HasMiddle = TRUE, TEXTBEFORE(Remainder, " "), Remainder),
        Middle, IF(HasMiddle = TRUE, TEXTAFTER(Remainder, " "), ""),
        List, TEXTJOIN("|", TRUE, Last, First, Middle),
        TEXTSPLIT(List, "|")
    )
);

LETTER_GRADE = LAMBDA(input, [mode],
    LET(
        mode, IF(OR(ISOMITTED(mode), mode > 2), 0, mode),
        value, input * 100,
        letters, {"A", "B", "C", "D", "F"},
        minima, SWITCH(mode,
            0, {90, 80, 70, 60, 0},
            1, {80, 60, 40, 20, 0},
            2, {79, 59, 39, 19, 0}),
        grade, XLOOKUP(value, minima, letters, "-", -1),
        grade
    )
);